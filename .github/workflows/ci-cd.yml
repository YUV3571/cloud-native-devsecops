name: DevSecOps Security Scans

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ------------------------------
  # STEP 1: Security Scans (Trivy + Checkov)
  # ------------------------------
  security-scans:
    name: Security Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: latest

      - name: Run Trivy
        run: |
          trivy fs . --severity HIGH,CRITICAL

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Check for Terraform changes
        id: tf_diff
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^terraform-iac/'; then
            echo "tf_changed=true" >> $GITHUB_OUTPUT
          else
            echo "tf_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Checkov
        run: |
          checkov -d terraform-iac --framework terraform

  terraform:
    name: Terraform Deployment
    needs: security-scans
    if: needs.security-scans.outputs.tf_changed == 'true'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: terraform-iac

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform-iac

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform-iac

  build-and-push-image:
    name: Build and Push Container Image
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          if [ -z "${{ secrets.ACR_NAME }}" ]; then
            echo "::error::ACR_NAME secret is not set. Please add it in repo settings."
            exit 1
          fi
          echo "ACR_LOGIN_SERVER=${{ secrets.ACR_NAME }}.azurecr.io" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ secrets.ACR_NAME }}.azurecr.io/shared-app" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          driver-opts: |
            image=moby/buildkit:master

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./shared-app
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.title=shared-app
            org.opencontainers.image.description=Cloud Native DevSecOps Demo Application

  run-cost-analysis:
    name: Run Azure Cost Analysis
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Azure Cost Analyzer
        uses: ./cloud-cost-gpt
        with:
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}

      - name: Upload Cost Report
        uses: actions/upload-artifact@v4
        with:
          name: cost-report
          path: cost_report.md